@inherits LayoutComponentBase
@inject AppState AppState
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject IPubs pubs
@inject ISnackbar Snackbar
@implements IDisposable

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        @if (USP.UsrId == 0)
        {
            <MudFab StartIcon="@Icons.Material.Filled.Login"
                Label="GİRİŞ"
                Color="Color.Error"
                Size="Size.Small" 
                OnClick="@(() => DialogService.Show<LoginDialog>())" />
        }
        else
        {
            <MudTooltip Text="Güvenli Çıkış">
                <MudFab EndIcon="@Icons.Material.Filled.Logout"
                    Label="@USP.UsrNN"
                    Color="Color.Error"
                    Size="Size.Small"
                    OnClick="Logout" />
            </MudTooltip>
        }
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">LinkNoNetApp</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-1 pt-1">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    [CascadingParameter]
    private UserStateProvider? USP { get; set; }

    bool _drawerOpen = true;
    string AdmMsg = "";

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await USP!.Logout();
    }

    protected override void OnInitialized()
    {
        pubs.AdmMsgChanged += OnAdmMsgChanged;
    }

    private void OnAdmMsgChanged(object sender, AdmMsgEventArgs e)
    {
        if (e.Who == "H" ||                         // Herkese
            e.Who == AppState.UsrTyp ||             // Adm, Mgz, Tnt
            AppState.UsrId == int.Parse(e.Who))     // Usr
        {
            Snackbar.Add(e.Msg, Severity.Error, config =>
            {
                config.RequireInteraction = true;
            });
        }
    }

    public void Dispose()
    {
        pubs.AdmMsgChanged -= OnAdmMsgChanged;
    }

}