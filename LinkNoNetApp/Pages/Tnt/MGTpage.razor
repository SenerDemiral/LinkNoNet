@page "/tnt/mgt"
@inject AppState AppState
@inject NavigationManager NavigationManager
@inject IDataAccess db

<PageTitle>Tanıtıcı</PageTitle>

<div class="mud-theme-dark">
    <MudText Align="Align.Center" Typo="Typo.body2">Mağaza Komisyon Oranları</MudText>
</div>

<MudDataGrid T="MGT" Items="@data" @ref="gridRef"
             ReadOnly="true"
             HorizontalScrollbar="true"
             Bordered="true"
             Dense="true">
    <Columns>
        <Column T="MGT" Field="MtAd" Title="Mağaza" IsEditable="false" />
        <Column T="MGT" Field="Grp" IsEditable="true" />
        <Column T="MGT" Field="KmsYzd" Title="Komisyon %" IsEditable="false" />
    </Columns>
</MudDataGrid>

@code {
    [CascadingParameter] private UserStateProvider? USP { get; set; }

    private List<MGT> data = new List<MGT>();
    private MudDataGrid<MGT>? gridRef;

    protected override async Task OnInitializedAsync()
    {
        string sql = $"select * from MGT_GET(@Typ, @Id)";
        data = (await db.LoadData<MGT, dynamic>(sql, new { Typ = AppState.UsrTyp, Id = AppState.UsrRefId })).ToList();
    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        if (parameters.TryGetValue<UserStateProvider>(nameof(USP), out var value))
        {
            if (value is null || value.UsrTyp != "T")
                NavigationManager.NavigateTo("");
            else
                await base.SetParametersAsync(parameters);  //Diger LifeCyle metodlarini cagiriyor
        }
    }

    private sealed class MGT
    {
        public int MTid { get; set; }
        public string? MtAd { get; set; }
        public string Grp { get; set; }
        public int KmsYzd { get; set; }
        public int TTid { get; set; }
        public string? TtAd { get; set; }
    }
}
