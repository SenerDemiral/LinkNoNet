@page "/"
@inject IDataAccess db
@inject IDialogService DialogService


<style>
    .selected {
        background-color: #1E88E5 !important;
    }
    .selected > td {
        color: white !important;
    }
    .selected > td .mud-input {
        color: white !important;
    }
</style>

<MudText Class="d-flex justify-center" Style="@($"color:{Colors.LightGreen.Accent3}; background:{Colors.BlueGrey.Darken4};")">Index #yty63365</MudText>

<MudDataGrid T="YA" Items="@data" @ref="mudDataGrid" Virtualize="true" FixedHeader="true"
        Hover="true" Dense="true" Groupable="true" RowClassFunc="@SelectedRowClassFunc"
             Filterable="false" MultiSelection="false" Height="80vh"
             RowClick="@RowClicked" Striped="true">
    <Columns>
        <Column T="YA">
            <CellTemplate>
                <MudIconButton Icon="@Icons.Material.Filled.Outbound" Class="pa-0" Disabled="false" OnClick="@(() => ShowBtnPress(context.Item))" />
            </CellTemplate>
        </Column>
        <Column T="YA" Field="@nameof(YA.YAid)" Title="ID" Groupable="false" Filterable="false" />
        <Column T="YA" Field="@nameof(YA.EXD)"  Groupable="false" >
            <CellTemplate>
                @context.Item.EXD.ToString("dd.MM.yy HH:mm:ss:fff")
            </CellTemplate>
        </Column>
        <Column T="YA" Field="@nameof(YA.MTid)" Title="Mgz"/>
        <Column T="YA" Field="@nameof(YA.TTid)" Title="Tnt"/>
        <Column T="YA" Field="@nameof(YA.IP)" />
        <Column T="YA" Field="@nameof(YA.URL)" />
    </Columns>
</MudDataGrid>

@*<MudPopover Open="@_isPopoverOpen"  Class="px-4 pt-4 mx-8" Style="position:fixed; left: 100px !important">
    <div class="d-flex flex-column">
        <MudText>MTid:@MTid TTId:@TTid</MudText>
        <MudButton OnClick="ToggleOpen" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Close</MudButton>
    </div>
</MudPopover>
*@

<MudDialog @bind-IsVisible="visible" Options="dialogOptions" DisableSidePadding="true">
    <DialogContent >
        <MudContainer Style="max-height: 90vh ; overflow-y: scroll; padding-left: 0px;" >
        <MudTreeView T="string" ExpandOnClick="true" Dense="true" >
            <MudTreeViewItem Value="@("Applications")">
                <MudTreeViewItem Value="@("Terminal")" OnClick="Submit"  Class="cursor-zoom-in"/>
                <MudTreeViewItem Value="@("Terminal")" OnClick="Submit"/>
                </MudTreeViewItem>
            <MudTreeViewItem Value="@("Documents")">
                <MudTreeViewItem Value="@("MudBlazor")">
                    <MudTreeViewItem Value="@("Api")" />
                    <MudTreeViewItem Value="@("Components")" />
                    <MudTreeViewItem Value="@("Components2")" />
                </MudTreeViewItem>
            </MudTreeViewItem>
        </MudTreeView>
        </MudContainer>
    </DialogContent>
    
</MudDialog>



@*<MudTable Items="@data" T="YA" @ref="mudTable" Hover="true" Dense="true" Striped="true" Breakpoint="Breakpoint.Xs">
    <HeaderContent>
        <MudTh>EXD</MudTh>
        <MudTh>Mağaza</MudTh>
        <MudTh>Tanıtıcı</MudTh>
        <MudTh>IP</MudTh>
        <MudTh>URL</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="EXD">@context.EXD.ToString()</MudTd>
        <MudTd DataLabel="Mgz">@context.MTid</MudTd>
        <MudTd DataLabel="Tnt">@context.TTid</MudTd>
        <MudTd DataLabel="IP">@context.IP</MudTd>
        <MudTd DataLabel="URL">@context.URL</MudTd>
    </RowTemplate>
</MudTable>
*@
@code{
    private IEnumerable<YA>? data; // = new List<Element>(); 
    int MTid = 0;
    int TTid = 0;
    string sty { get; set; }
    private int selectedRowNumber = -1;
    private MudDataGrid<YA>? mudDataGrid;
    private bool visible;
    private int rating;
    private void OpenDialog() => visible = true;
    void Submit() => visible = false;

    private DialogOptions dialogOptions = new() { NoHeader = true, };

    private void ShowBtnPress(YA item)
    {
        mudDataGrid.SelectedItem = item;
        
    }

    private string SelectedRowClassFunc(YA element, int rowNumber)
    {
        //if (selectedRowNumber == rowNumber)
        //{
        //    selectedRowNumber = -1;
        //    return string.Empty;
        //}
        if (mudDataGrid.SelectedItem != null && mudDataGrid.SelectedItem.Equals(element))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }
    protected override async Task OnInitializedAsync()
    {
        // Deneme
        string sql = $"select * from YA order by YAid desc";
        data = await db.LoadData<YA, dynamic>(sql, new { });

        //var aaa = await db.StoreProc<SMTP, dynamic>("APP_SMTP", new { });
    }

    void RowClicked(DataGridRowClickEventArgs<YA> args)
    {
        //_events.Insert(0, $"Event = RowClick, Index = {args.RowIndex}, Data = {System.Text.Json.JsonSerializer.Serialize(args.Item)}");
        MTid = args.Item.MTid;
        TTid = args.Item.TTid;
        
        //sty = $"position:fixed; top:{args.MouseEventArgs.PageY}px; left:{args.MouseEventArgs.PageX}px;";
        visible = true;
    }

    private class SMTP
    {
        public string Firma { get; set; }
        public string Client_Host { get; set; }
        public int Port { get; set; }
    }

    public class YA
    {
        public int YAid { get; set; }
        public DateTime EXD { get; set; }
        public string IP { get; set; }
        public string URL { get; set; }
        public int MTid { get; set; }
        public int TTid { get; set; }
    }
}