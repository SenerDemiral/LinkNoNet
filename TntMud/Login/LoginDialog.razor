@inject ISnackbar Snackbar
@inject AppState AppState
@inject IDataAccess db
@inject ProtectedLocalStorage _protectedLocalStorage

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Login
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField AutoFocus="true" @bind-Value="Model.LgnNme" Label="UsrId" Variant="Variant.Text"></MudTextField>
        <MudTextField @bind-Value="Model.LgnPwd" 
            Label="Pwd" Variant="Variant.Text" InputType="@PasswordInput" 
            Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ToggleShowPwd" AdornmentAriaLabel="Show Password" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="TryLogin">Login</MudButton>
    </DialogActions>
</MudDialog>

@code{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private InputModel Model { get; set; } = new();
    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    
    void ToggleShowPwd()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task TryLogin()
    {
        Model.Ip = AppState.UsrIp;
        // SP input params db de tanimlandigi sirasiyla gelmeli.
        var rtrn = await db.StoreProc<OutputModel, InputModel>("Usr_Login(@LgnNme, @LgnPwd, @Ip)", Model);

        if(rtrn.Stu == 0) {
            Snackbar.Add(rtrn.Msg, Severity.Success);
            MudDialog.Close();
            await _protectedLocalStorage.SetAsync(Constants.BrowserUsrIdKey, rtrn.UTid);

            AppState.LoginOk(rtrn.UTid, rtrn.Typ!, rtrn.RefId, rtrn.Moniker);
        }
        else {
            Snackbar.Add(rtrn.Msg, Severity.Error);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private class InputModel
    {
        public string? LgnNme { get; set; }
        public string? LgnPwd { get; set; }
        public string? Ip { get; set; }
    }

    private class OutputModel
    {
        public int Stu { get; set; }
        public int UTid { get; set; }
        public string? Typ { get; set; }
        public int RefId { get; set; }
        public string? Moniker { get; set; }
        public string? Msg { get; set; }
    }
}